version: "3.3"

services:
  butterfly_postgres:
    image: postgres:alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - butterfly_postgres_backup:/docker-entrypoint-initdb.d
      - butterfly_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root

  butterfly_redis:
    image: redis:alpine
    container_name: butterfly_redis
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./redis:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_PASSWORD=redis_password

  butterfly_backend:
    depends_on:
      - butterfly_postgres
      - butterfly_redis
    image: prakasa1904/tps-py-api:development
    container_name: butterfly_app
    working_dir: /code/
    volumes:
      - ../:/code
      - /code/python_modules/ # Generate volume `python_modules` empty
    restart: always
    command: make dev-web-docker
    env_file:
      - ./.env
    ports:
      - 5000:5000

  butterfly_frontend:
    image: node:lts-alpine
    container_name: butterfly_frontend
    working_dir: /code/
    volumes:
      - ../web/modules/frontend:/code
    restart: always
    command: yarn start

  butterfly_nginx:
    image: nginx
    container_name: butterfly_nginx
    depends_on:
      - butterfly_app
      - butterfly_frontend
    volumes:
      - ./../public/:/code
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    ports:
      - 80:80
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

volumes:
  butterfly_postgres_backup:
    driver: local
    driver_opts:
      type: none
      device: $PWD/docker/postgres/restore
      o: bind
  butterfly_postgres_data:
    driver: local
    driver_opts:
      type: none
      device: $PWD/docker/postgres/volume
      o: bind
